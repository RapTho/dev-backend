# Logging
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n

# Swagger-UI config
quarkus.smallrye-openapi.info-title="Dev-Backend"

# Dev Services
quarkus.datasource.devservices.enabled = true

# Datasource configuration
# docker run -d --name postgres -e POSTGRES_USER=quarkus -e POSTGRES_PASSWORD=quarkus -e POSTGRES_DB=quarkus -p 5433:5432 postgres:13.3
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=quarkus
quarkus.datasource.password=quarkus

# Reactive datasource configuration
%dev.quarkus.datasource.reactive.url=vertx-reactive:postgresql://localhost:5433/quarkus
# %prod.quarkus.datasource.reactive.url=vertx-reactive:postgresql://localhost:5433/prod
# %test.quarkus.datasource.reactive.url=vertx-reactive:postgresql://localhost:5433/test

# Hibernate ORM configuration
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.sql-load-script=import.sql

# CORS: Adjust to your situation
quarkus.http.cors=true
quarkus.http.cors.origins=http://example.com,http://localhost:8080
quarkus.http.cors.methods=GET,POST,PUT,DELETE

# TLS
# quarkus.http.ssl.certificate.key-store-file=/path/to/myapp.keystore
# quarkus.http.ssl.certificate.key-store-password=mypass
# quarkus.http.ssl-port=8443
# quarkus.http.ssl.certificate.key-store-file-type=[one of JKS, JCEKS, P12, PKCS12, PFX]
# quarkus.http.insecure-requests=redirect